name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Build server
      run: go build -v -o monitor-server ./cmd/server
    
    - name: Build agent
      run: go build -v -o monitor-agent ./cmd/agent
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: |
          monitor-server
          monitor-agent

  cross-compile:
    name: Cross Compile
    runs-on: ubuntu-latest
    needs: build
    
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: windows
            goarch: amd64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: ${{ matrix.goos == 'linux' && '1' || '0' }}
      run: |
        EXT=""
        if [ "${{ matrix.goos }}" = "windows" ]; then
          EXT=".exe"
        fi
        go build -o monitor-server-${{ matrix.goos }}-${{ matrix.goarch }}${EXT} ./cmd/server
        go build -o monitor-agent-${{ matrix.goos }}-${{ matrix.goarch }}${EXT} ./cmd/agent
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: monitor-${{ matrix.goos }}-${{ matrix.goarch }}
        path: monitor-*
